myFunction= NumericalMathFunction :
  input  : [x]
  output : [outputVariable]
  evaluation :   sin(x)
  gradient   :   
  | d(outputVariable) / d(x) = cos(x) 

  hessian    :   
  | d^2(outputVariable) / d(x)^2 = (-(sin(x))) 

myInverseTrendFunction (  [30,30]  ) =  [30.988]
myInverseTrendFunction (  class=NumericalSample name=Unnamed description=[,] implementation=class=NumericalSampleImplementation name=Unnamed size=10 dimension=2 data=[class=NumericalPoint name=Unnamed dimension=2 values=[1,1],class=NumericalPoint name=Unnamed dimension=2 values=[2,2],class=NumericalPoint name=Unnamed dimension=2 values=[3,3],class=NumericalPoint name=Unnamed dimension=2 values=[4,4],class=NumericalPoint name=Unnamed dimension=2 values=[5,5],class=NumericalPoint name=Unnamed dimension=2 values=[6,6],class=NumericalPoint name=Unnamed dimension=2 values=[7,7],class=NumericalPoint name=Unnamed dimension=2 values=[8,8],class=NumericalPoint name=Unnamed dimension=2 values=[9,9],class=NumericalPoint name=Unnamed dimension=2 values=[10,10]]  ) =  class=NumericalSample name=Unnamed description=[y0] implementation=class=NumericalSampleImplementation name=Unnamed size=10 dimension=1 data=[class=NumericalPoint name=Unnamed dimension=1 values=[0.158529],class=NumericalPoint name=Unnamed dimension=1 values=[1.0907],class=NumericalPoint name=Unnamed dimension=1 values=[2.85888],class=NumericalPoint name=Unnamed dimension=1 values=[4.7568],class=NumericalPoint name=Unnamed dimension=1 values=[5.95892],class=NumericalPoint name=Unnamed dimension=1 values=[6.27942],class=NumericalPoint name=Unnamed dimension=1 values=[6.34301],class=NumericalPoint name=Unnamed dimension=1 values=[7.01064],class=NumericalPoint name=Unnamed dimension=1 values=[8.58788],class=NumericalPoint name=Unnamed dimension=1 values=[10.544]]
