test 0 : default constructor and string converter
matrix0 =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=0 columns=0 values=[]
test number one : constructor with size, operator() and string converter
matrix1 =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,1),(2,4),(3,-1),(4,0)]
test 2 : copy constructor and string converter
matrix2 =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,1),(2,4),(3,-1),(4,0)]
test 3 : dimension methods
matrix1's nbRows =  2
matrix1's nbColumns =  2
test 4 : constructor with collection method
elementsValues =  [(1,-1),(2,-1),(3,-1),(4,1),(5,1),(6,1)]
matrix0bis =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,-1),(2,-1),(3,-1),(4,1)]
test 5 : transposition / conjugate method
matrix1 transposed =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,1),(3,-1),(2,4),(4,0)]
matrix1 conjugated =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,-1),(2,-4),(3,1),(4,-0)]
transposition and conjugate method
matrix1 conjugated and transposed =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,-1),(3,1),(2,-4),(4,-0)]
test 6 : addition method
sum1 =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(2,2),(5,3),(5,3),(8,0)]
sum2 =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(2,2),(5,3),(5,3),(8,0)]
sum1 equals sum2 =  True
test 7 : substraction method
diff =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0,0),(-1,5),(1,-5),(0,0)]
test 8 : matrix multiplication method
prod =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(8,-4),(10,2),(10,2),(4,16)]
test 9 : multiplication with a numerical point method
pt =  class=NumericalPoint name=Unnamed dimension=2 values=[1,2]
ptResult =  [(7,-1),(10,4)]
test 10 : multiplication and division by a numerical scalar methods
scalprod1 =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(2,4),(2,14),(10,0),(12,4)]
scaldiv1 =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0.4,0.2),(1,1),(0.8,-0.6),(1.2,-0.4)]
test 10 : isEmpty method
matrix1 is empty =  False
matrix5 is empty =  True
matrix6 is empty =  True
matrix0 is empty =  True
test 11 : multiplication with a numerical point method
pt_test =  class=NumericalPoint name=Unnamed dimension=2 values=[1,2]
A =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0.5,0),(-0.866025,0),(0.866025,0),(0.5,0)]
B =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0.5,0),(0.866025,0),(-0.866025,0),(0.5,0)]
identity =  class=ComplexMatrix implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,0),(0,0),(0,0),(1,0)]
ptResult2 =  [(1,0),(2,0)]
