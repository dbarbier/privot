point =  class=NumericalPoint name=point dimension=2 values=[1000,1000]
sample =  class=NumericalSample name=mySample description=[,] implementation=class=NumericalSampleImplementation name=mySample size=3 dimension=2 data=[class=NumericalPoint name=Unnamed dimension=2 values=[100,200],class=NumericalPoint name=Unnamed dimension=2 values=[101,201],class=NumericalPoint name=Unnamed dimension=2 values=[102,202]]
matrix =  class=Matrix implementation=class=MatrixImplementation name=Unnamed rows=2 columns=3 values=[0,3,1,4,2,5]
nearestPointAlgorithmResult =  class=NearestPointAlgorithmImplementationResult minimizer=class=NumericalPoint name=Unnamed dimension=4 values=[1,1,1,1] iterationsNumber=15 absoluteError=-1 relativeError=-1 residualError=-1 constraintError=-1
simulation result =  probabilityEstimate=5.000000e-01 varianceEstimate=1.000000e-02 standard deviation=1.00e-01 coefficient of variation=2.00e-01 confidenceLength(0.95)=3.92e-01 outerSampling=150 blockSize=4
beta =  Beta(r = 3, t = 5, a = -1, b = 4)
analytical =  NumericalMathFunction :
  input  : [a,b,c]
  output : [squaresum,prod,complex]
  evaluation :   

  | squaresum = a+b+c
  |      prod = a-b*c
  |   complex = (a+2*b^2+3*c^3)/6

  gradient   :   
  | d(squaresum) / d(a) = 1 
  | d(squaresum) / d(b) = 1 
  | d(squaresum) / d(c) = 1 
  |     d(prod) / d(a) = 1 
  |     d(prod) / d(b) = -1*c 
  |     d(prod) / d(c) = -1*b 
  |  d(complex) / d(a) = 0.166667 
  |  d(complex) / d(b) = 0.666667*b 
  |  d(complex) / d(c) = 1.5*c^2 

  hessian    :   
  |   d^2(squaresum) / d(a)^2 = 0 
  | d^2(squaresum) / d(b)d(a) = 0 
  |   d^2(squaresum) / d(b)^2 = 0 
  | d^2(squaresum) / d(c)d(a) = 0 
  | d^2(squaresum) / d(c)d(b) = 0 
  |   d^2(squaresum) / d(c)^2 = 0 
  |        d^2(prod) / d(a)^2 = 0 
  |      d^2(prod) / d(b)d(a) = 0 
  |        d^2(prod) / d(b)^2 = 0 
  |      d^2(prod) / d(c)d(a) = 0 
  |      d^2(prod) / d(c)d(b) = -1 
  |        d^2(prod) / d(c)^2 = 0 
  |     d^2(complex) / d(a)^2 = 0 
  |   d^2(complex) / d(b)d(a) = 0 
  |     d^2(complex) / d(b)^2 = 0.666667 
  |   d^2(complex) / d(c)d(a) = 0 
  |   d^2(complex) / d(c)d(b) = 0 
  |     d^2(complex) / d(c)^2 = 3*c 

