From c5f5941339cbd9809ba84f462164602910705cff Mon Sep 17 00:00:00 2001
From: Denis Barbier <bouzim@gmail.com>
Date: Tue, 26 Feb 2013 00:30:50 +0100
Subject: [PATCH 07/10] Automatic conversion from DistributionImplementation
 into SklarCopula

---
 python/src/SklarCopula.i |   21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/python/src/SklarCopula.i b/python/src/SklarCopula.i
index 97ceea5..6a9608a 100644
--- a/python/src/SklarCopula.i
+++ b/python/src/SklarCopula.i
@@ -6,5 +6,26 @@
 #include "SklarCopula.hxx"
 %}
 
+%typemap(in) const OT::SklarCopula & {
+  void * ptr = 0;
+  if (SWIG_IsOK(SWIG_ConvertPtr($input, (void **) &$1, $1_descriptor, 0))) {
+    // From class, ok
+  } else if (SWIG_IsOK(SWIG_ConvertPtr($input, &ptr, SWIG_TypeQuery("OT::Pointer<OT::DistributionImplementation> *"), 0))) {
+    // From Pointer<DistributionImplementation>
+    OT::Pointer<OT::DistributionImplementation> * p_impl = reinterpret_cast< OT::Pointer<OT::DistributionImplementation> * >( ptr );
+    $1 = new OT::SklarCopula( **p_impl );
+  } else if (SWIG_IsOK(SWIG_ConvertPtr($input, &ptr, SWIGTYPE_p_OT__DistributionImplementation, 0))) {
+    // From DistributionImplementation
+    OT::DistributionImplementation * p_impl = reinterpret_cast< OT::DistributionImplementation * >( ptr );
+    $1 = new OT::SklarCopula( *p_impl );
+  }
+}
+
+%typemap(typecheck,precedence=SWIG_TYPECHECK_POINTER) const OT::SklarCopula & {
+  $1 = SWIG_IsOK(SWIG_ConvertPtr($input, NULL, $1_descriptor, 0))
+    || SWIG_IsOK(SWIG_ConvertPtr($input, NULL, SWIG_TypeQuery("OT::Pointer<OT::DistributionImplementation> *"), 0))
+    || SWIG_IsOK(SWIG_ConvertPtr($input, NULL, SWIGTYPE_p_OT__DistributionImplementation, 0));
+}
+
 %include SklarCopula.hxx
 namespace OT { %extend SklarCopula { SklarCopula(const SklarCopula & other) { return new OT::SklarCopula(other); } } }
-- 
1.7.10.4

