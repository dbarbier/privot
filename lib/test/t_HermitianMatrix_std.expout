test 0 : default constructor and string converter
hermitianMatrix0 = class=HermitianMatrix dimension=0 implementation=class=ComplexMatrixImplementation name=Unnamed rows=0 columns=0 values=[]
test 1: constructor with size, operator() and string converter
hermitianMatrix1 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,0),(3,-1),(0,0),(4,0)]
test 2 : copy constructor and string converter
hermitianMatrix2 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,0),(3,-1),(0,0),(4,0)]
test 3 : get dimensions methods
hermitianMatrix1's nbRows = 2
hermitianMatrix1's nbColumns = 2
test 4 : assignment method
hermitianMatrix3 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,0),(3,-1),(0,0),(4,0)]
test 5 : conjugate method
hermitianMatrix1 conjugate = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,-0),(3,1),(0,0),(4,-0)]
hermitianMatrix1 conjugate = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(1,-0),(3,1),(0,0),(4,-0)]
test number 6 : addition method
sum1 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(2,0),(6,0),(0,0),(8,0)]
sum2 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(2,0),(6,0),(0,0),(8,0)]
sum1 equals sum2 = true
test 7 : substraction method
diff1 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0,0),(0,-2),(0,0),(0,0)]
diff2 = class=SquareComplexMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0,-2),(-2,-7),(0,-3),(-3,-8)]
diff3 = class=SquareComplexMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0,2),(2,7),(0,3),(3,8)]
test 8 : matrix multiplication method
prod = class=SquareComplexMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(9,6),(15,3),(15,3),(24,-6)]
test 9 : multiplication with a numerical point method
pt = class=NumericalPoint name=Unnamed dimension=2 values=[1,2]
ptResult = [(7,2),(11,-1)]
test 10 : multiplication and division by a numerical scalar methods
scalprod1 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(3,2),(11,3),(7,9),(12,8)]
scalprod2 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(3,2),(11,3),(7,9),(12,8)]
scalprod1 equals scalprod2 = true
scaldiv1 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0.230769,-0.153846),(0.538462,-0.692308),(0.846154,-0.230769),(0.923077,-0.615385)]
scaldiv2 = class=HermitianMatrix dimension=2 implementation=class=ComplexMatrixImplementation name=Unnamed rows=2 columns=2 values=[(0.230769,-0.153846),(0.538462,-0.692308),(0.846154,-0.230769),(0.923077,-0.615385)]
scaldiv1 equals scaldiv2 = true
test number twelve : isEmpty method
hermitianMatrix0 is empty = true
hermitianMatrix1 is empty = false
hermitianMatrix5 is empty = true
